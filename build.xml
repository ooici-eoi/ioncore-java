<project name="ioncore-java" default="dist" xmlns:ivy="antlib:org.apache.ivy.ant" basedir=".">
    <!-- import properties -->
    <property file="build.properties" />
    <!-- ivy properties & settings -->
    <property file="${settings.dir}/ivysettings.properties" />
    <ivy:settings file="${settings.dir}/ivysettings.xml" />
    <!-- ooici properties -->
    <property file="${settings.dir}/ooici.properties" />
    <!-- import the ooici_build.xml -->
    <import file="${settings.dir}/ooici-build.xml" />
    
    <!--
    	Targets that can be overridden:
    		- pre-compile:		Called before javac compilation - empty by default, override in build.xml to use
      		- post-compile:		Called after javac compilation - empty by default, override in build.xml to use
      		- pre-dist:			Called before all actions in the dist target - empty by default, override in build.xml to use
      		- post-dist:		Called after all actions in the dist target - empty by default, override in build.xml to use
      		- clean-more:		Called at the end of 'clean' - empty by default, override in build.xml to use
    -->
    
    <!-- ================================= 
          target: post-compile
         ================================= -->
    <target name="post-compile" >
        <!-- copy the log4j.properties file -->
        <copy file="${src.dir}/log4j.properties" todir="${build.dir}" />
    </target>
    
	<!-- ================================= 
          target: runex              
         ================================= -->
	<target name="runex" depends="resolve,compile" description="--> Run Example">
		<java classname="ion.example.ServiceConsume">
			<classpath refid="runtime.classpath"/>
			<sysproperty key="ioncore.sysname" value="${user.name}"/>
		</java>
	</target>
</project>